# Dify Plugin Development Configuration
# Copy this file to .env and fill in the values for development

# Remote debugging configuration (get these from Dify Plugin Management page)
# Leave empty if not using remote debugging
REMOTE_INSTALL_HOST=localhost
REMOTE_INSTALL_PORT=5001
REMOTE_INSTALL_KEY=your_debugging_key_here

# ðŸ§¬ BIOMNI A1 AGENT CONFIGURATION

# Required: API Keys for your chosen model
# For Claude models (recommended):
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Optional: Other model providers
# OPENAI_API_KEY=your_openai_api_key_here
# OPENAI_ENDPOINT=https://your-resource-name.openai.azure.com/  # For Azure OpenAI
# GEMINI_API_KEY=your_gemini_api_key_here
# GROQ_API_KEY=your_groq_api_key_here
# AWS_BEARER_TOKEN_BEDROCK=your_bedrock_api_key_here
# AWS_REGION=us-east-1

# Biomni A1 Configuration
BIOMNI_DATA_PATH=./data  # Data lake location (~11GB download on first run)
BIOMNI_LLM_MODEL=claude-sonnet-4-20250514  # Model for Biomni A1 agent
BIOMNI_TIMEOUT_SECONDS=600  # Timeout for biomedical analyses

# IMPORTANT: Force subprocess mode to avoid gevent/trio conflicts
BIOMNI_USE_SUBPROCESS=true

# Optional: LLM Source specification
# Options: "OpenAI", "AzureOpenAI", "Anthropic", "Ollama", "Gemini", "Bedrock", "Groq", "Custom"
LLM_SOURCE=Anthropic

# Optional: Custom model serving configuration
# CUSTOM_MODEL_BASE_URL=http://localhost:8000/v1
# CUSTOM_MODEL_API_KEY=your_custom_api_key_here

# Logging configuration
LOG_LEVEL=INFO

# ðŸ“‹ SETUP CHECKLIST:
# 1. Install Biomni: pip install biomni
# 2. Set required API key (ANTHROPIC_API_KEY for Claude)
# 3. Ensure ~11GB free space for data lake download
# 4. Configure conda environment: conda activate biomni_e1
# 5. Test: python -c "from biomni.agent import A1; print('OK')"
